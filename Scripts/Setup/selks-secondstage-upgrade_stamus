#!/bin/bash

# Copyright(C) 2019, Stamus Networks
# All rights reserved
# Part of Debian SELKS scripts
# Written by Peter Manev <pmanev@stamus-networks.com>
#
# Please run on Debian
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

if (( $EUID != 0 )); then
     echo -e "\e[1mPlease run this script as root or with \"sudo\".\n"
     echo -e "\e[0m"
     exit 1
fi

SURI_CAPTURE_WASENABLED=""

echo -e "\e[1mNOTE:"
echo -e "\e[1mStarting second stage upgrade sequence..."
echo -e "\e[0m"

if ( /usr/bin/suricata --dump-config |grep 'outputs.7.pcap-log.enabled = yes' ) 
then 
  # check if suri capture was enabled prior to the upgrade.
  # If it is and the conf file is overwritten - make sure we re-enable it again.
  SURI_CAPTURE_WASENABLED="YES"
fi 

/bin/systemctl stop kibana

if [ "`/bin/systemctl is-active molochviewer-selks`" == "active" ] 
then
  /bin/systemctl stop molochviewer-selks
fi

if [ "`/bin/systemctl is-active molochpcapread-selks`" == "active" ] 
then 
  /bin/systemctl stop molochpcapread-selks
fi 

apt-get update && apt-get dist-upgrade

/bin/systemctl restart elasticsearch
/bin/systemctl restart kibana
/usr/bin/supervisorctl restart scirius 

# Moloch upgrade
moloch_latest=$(curl  https://api.github.com/repos/aol/moloch/tags -L -s |jq -r '.[0].name' | cut -c 2-)
moloch_current=$(dpkg -l |grep moloch | awk '{print $3}')

if dpkg --compare-versions ${moloch_latest} gt ${moloch_current} ; then
  echo -e "\e[1m\nUpgrading Moloch.."
  echo -e "\e[0m"
  mkdir -p /opt/molochtmp
  cd /opt/molochtmp/
  
  if /usr/bin/wget -q --timeout=10s --tries=1 https://s3.amazonaws.com/files.molo.ch/builds/ubuntu-18.04/moloch_${moloch_latest}-1_amd64.deb ; then
    if  ( curl -4 --retry 4 --retry-connrefused --retry-delay 30 -X GET "localhost:9200/_cluster/health?wait_for_status=yellow&timeout=240s" )
    then
      dpkg -i /opt/molochtmp/moloch_${moloch_latest}-1_amd64.deb 
      printf 'UPGRADE\n' | /data/moloch/db/db.pl http://localhost:9200 upgrade
      rm /opt/molochtmp/moloch_${moloch_latest}-1_amd64.deb
    else
      echo "\e[1m\nMoloch will not be upgraded!! Please check that Elasticsearch is up and running."
      echo -e "\e[0m"
      exit 1;
    fi
    
    echo -e "\e[1m\nStarting Moloch SELKS services.. "
    echo -e "\e[0m"
    /bin/systemctl start molochpcapread-selks.service
    /bin/systemctl start molochviewer-selks.service
  else
    /bin/systemctl start molochpcapread-selks.service
    /bin/systemctl start molochviewer-selks.service
    echo "\e[1m\nCould not download and upgrade Moloch. Please check your network connection or that Elasticsearch is up and running."
    echo -e "\e[0m"
    exit 1;
  fi
  
else
  /bin/systemctl start molochpcapread-selks.service
  /bin/systemctl start molochviewer-selks.service
fi

if  [ "$SURI_CAPTURE_WASENABLED" == "YES" ] 
then 
  /usr/bin/selks-enable-suri-capture_stamus
fi 

/bin/systemctl restart suricata

